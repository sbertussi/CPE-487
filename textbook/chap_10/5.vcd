$date
  Thu Oct 15 22:10:37 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module ex_5_tb $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 8 # c[7:0] $end
$var reg 8 $ rax[7:0] $end
$var reg 8 % rbx[7:0] $end
$var reg 1 & sl1 $end
$var reg 1 ' sl2 $end
$var reg 1 ( clk $end
$scope module exercise $end
$var reg 8 ) a[7:0] $end
$var reg 8 * b[7:0] $end
$var reg 8 + c[7:0] $end
$var reg 1 , sl1 $end
$var reg 1 - sl2 $end
$var reg 1 . clk $end
$var reg 8 / rax[7:0] $end
$var reg 8 0 rbx[7:0] $end
$var reg 2 1 e[1:0] $end
$var reg 8 2 d[7:0] $end
$scope module decode1 $end
$var reg 1 3 a $end
$var reg 2 4 b[1:0] $end
$upscope $end
$scope module mux1 $end
$var reg 8 5 a[7:0] $end
$var reg 8 6 b[7:0] $end
$var reg 1 7 sel $end
$var reg 8 8 c[7:0] $end
$upscope $end
$scope module rega $end
$var reg 8 9 a[7:0] $end
$var reg 1 : ld $end
$var reg 1 ; clk $end
$var reg 8 < b[7:0] $end
$upscope $end
$scope module regb $end
$var reg 8 = a[7:0] $end
$var reg 1 > ld $end
$var reg 1 ? clk $end
$var reg 8 @ b[7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b11111111 !
b00000000 "
b11110000 #
bUUUUUUUU $
bUUUUUUUU %
1&
1'
0(
b11111111 )
b00000000 *
b11110000 +
1,
1-
0.
bUUUUUUUU /
bUUUUUUUU 0
b10 1
b00000000 2
13
b10 4
b00000000 5
b11110000 6
17
b00000000 8
b11111111 9
1:
0;
bUUUUUUUU <
b00000000 =
0>
0?
bUUUUUUUU @
#1000000
b11111111 $
1(
1.
b11111111 /
1;
b11111111 <
1?
#2000000
0&
0'
0(
0,
0-
0.
b01 1
b11110000 2
03
b01 4
07
b11110000 8
0:
0;
b11110000 =
1>
0?
#3000000
b11110000 %
1(
1.
b11110000 0
1;
1?
b11110000 @
#4000000
0(
0.
0;
0?
#5000000
